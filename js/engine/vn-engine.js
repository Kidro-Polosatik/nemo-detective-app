// js/engine/vn-engine.js
class VNEngine {
    static init() {
        console.log('üé¨ VN Engine –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
        this.currentScene = null;
        this.isTyping = false;
        this.currentText = '';
    }
    
    static showScene(sceneData) {
        const container = document.getElementById('app-container');
        if (!container) {
            console.error('‚ùå app-container –Ω–µ –Ω–∞–π–¥–µ–Ω');
            return;
        }
        
        container.innerHTML = this.renderFirstPersonScene(sceneData);
        this.currentScene = sceneData;
        this.typeText(sceneData.dialog.text);
    }
    
    static renderFirstPersonScene(scene) {
        return `
            <div class="vn-scene first-person" style="background-image: url('${scene.background}')">
                ${this.renderOtherCharacters(scene.characters)}
                ${this.renderDialog(scene.dialog)}
            </div>
        `;
    }
    
    static renderOtherCharacters(characters) {
        if (!characters) return '';
        
        return characters.map(char => `
            <div class="character-sprite ${char.position}" 
                 data-character="${char.name}"
                 style="background-image: url('assets/characters/${char.name}/${char.expression}.png')">
            </div>
        `).join('');
    }
    
    static renderDialog(dialog) {
        const speaker = window.vnCharacters[dialog.speaker];
        return `
            <div class="dialog-box">
                <div class="speaker-name">${speaker?.name || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π'}</div>
                <div class="dialog-text" id="dialog-text"></div>
                <div class="continue-indicator" onclick="VNEngine.next()">‚ñº –ù–∞–∂–º–∏—Ç–µ —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å</div>
            </div>
        `;
    }
    
    static typeText(text) {
        this.isTyping = true;
        this.currentText = '';
        const element = document.getElementById('dialog-text');
        if (!element) return;
        
        element.innerHTML = '';
        
        let i = 0;
        const typing = setInterval(() => {
            if (i < text.length) {
                this.currentText += text.charAt(i);
                element.innerHTML = this.currentText;
                i++;
            } else {
                clearInterval(typing);
                this.isTyping = false;
            }
        }, 30);
    }
    
    static next() {
        if (this.isTyping) {
            // –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å –∞–Ω–∏–º–∞—Ü–∏—é –ø–µ—á–∞—Ç–∏
            const element = document.getElementById('dialog-text');
            if (element && this.currentScene) {
                element.innerHTML = this.currentScene.dialog.text;
                this.isTyping = false;
            }
        } else {
            // –ü–æ–∫–∞ –ø—Ä–æ—Å—Ç–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –≤ –º–µ–Ω—é
            if (window.Menu) {
                Menu.show();
            }
        }
    }
}

// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
document.addEventListener('DOMContentLoaded', function() {
    VNEngine.init();
});
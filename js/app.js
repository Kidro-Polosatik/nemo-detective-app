// –ì–ª–∞–≤–Ω—ã–π —Ñ–∞–π–ª –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
class NemoDetectiveApp {
    constructor() {
        console.log('NemoDetectiveApp —Å–æ–∑–¥–∞–Ω');
        this.tg = window.Telegram.WebApp;
        this.init();
    }
    
    init() {
        console.log('=== –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø –ü–†–ò–õ–û–ñ–ï–ù–ò–Ø ===');
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –∑–∞–≥—Ä—É–∂–µ–Ω—ã
        if (typeof Menu === 'undefined' || typeof EpisodeView === 'undefined') {
            console.error('–ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã. Menu:', typeof Menu, 'EpisodeView:', typeof EpisodeView);
            this.showError('–ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã');
            return;
        }
        
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram WebApp —Å –∑–∞—â–∏—Ç–æ–π
        try {
            this.tg.expand();
            this.tg.enableClosingConfirmation();
            console.log('Telegram WebApp –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
        } catch (error) {
            console.warn('Telegram WebApp –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω:', error);
        }
        
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        window.appState = {
            currentView: 'menu',
            currentEpisodeId: null,
            userData: {
                score: 0,
                currentEpisode: 1,
                completedEpisodes: []
            }
        };
        
        // –ó–∞–≥—Ä—É–∑–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö
        this.loadUserData();
        
        // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥"
        this.setupBackButton();
        
        // –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        this.start();
    }
    
   start() {
    console.log('üïµÔ∏è –í–µ—á–Ω—ã–π –î–µ—Ç–µ–∫—Ç–∏–≤ - –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ!');
    console.log('–ó–∞–≥—Ä—É–∂–µ–Ω–æ —ç–ø–∏–∑–æ–¥–æ–≤:', Object.keys(window.episodes || {}).length);
    console.log('–ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã:', {
        Menu: typeof Menu,
        EpisodeView: typeof EpisodeView, 
        Rating: typeof Rating
    });
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ Menu –¥–æ—Å—Ç—É–ø–µ–Ω –≥–ª–æ–±–∞–ª—å–Ω–æ
    if (typeof window.Menu === 'undefined') {
        console.error('Menu –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω –≥–ª–æ–±–∞–ª—å–Ω–æ');
        window.Menu = Menu; // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º
    }
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
    try {
        Menu.show();
        console.log('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –ø–æ–∫–∞–∑–∞–Ω–æ —É—Å–ø–µ—à–Ω–æ');
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∫–∞–∑–µ –º–µ–Ω—é:', error);
        this.showError('–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞: ' + error.message);
    }
}
    
loadUserData() {
    try {
        // –ü—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –∏–∑ Telegram Cloud Storage
        if (this.tg && this.tg.CloudStorage) {
            this.tg.CloudStorage.getItem('nemo_detective_data', (error, cloudData) => {
                if (!error && cloudData) {
                    const parsedData = JSON.parse(cloudData);
                    this.initUserData(parsedData);
                    console.log('–î–∞–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –∏–∑ Cloud Storage:', parsedData);
                } else {
                    // –ï—Å–ª–∏ –≤ –æ–±–ª–∞–∫–µ –Ω–µ—Ç, –ø—Ä–æ–±—É–µ–º –ª–æ–∫–∞–ª—å–Ω–æ
                    this.loadFromLocalStorage();
                }
            });
        } else {
            // Fallback –Ω–∞ localStorage
            this.loadFromLocalStorage();
        }
    } catch (e) {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö:', e);
        this.initUserData();
    }
}

loadFromLocalStorage() {
    const savedData = localStorage.getItem('nemo_detective_data');
    if (savedData) {
        const parsedData = JSON.parse(savedData);
        this.initUserData(parsedData);
        console.log('–î–∞–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –∏–∑ localStorage:', parsedData);
    } else {
        console.log('–°–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –Ω–µ—Ç, –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é');
        this.initUserData();
    }
}

initUserData(parsedData = null) {
    window.appState.userData = parsedData || {
        score: 0,
        currentEpisode: 1,
        completedEpisodes: []
    };
    
    // –î–æ–±–∞–≤–ª—è–µ–º completedEpisodes –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
    if (!window.appState.userData.completedEpisodes) {
        window.appState.userData.completedEpisodes = [];
    }
}

// –î–û–ë–ê–í–ò–¢–¨ –º–µ—Ç–æ–¥ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
saveUserData() {
    try {
        const dataString = JSON.stringify(window.appState.userData);
        
        // –ü—Ä–æ–±—É–µ–º —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤ Telegram Cloud Storage
        if (this.tg && this.tg.CloudStorage) {
            this.tg.CloudStorage.setItem('nemo_detective_data', dataString, (error) => {
                if (error) {
                    console.warn('–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤ Cloud Storage:', error);
                    // Fallback –Ω–∞ localStorage
                    localStorage.setItem('nemo_detective_data', dataString);
                } else {
                    console.log('–î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ Cloud Storage');
                }
            });
        } else {
            // Fallback –Ω–∞ localStorage
            localStorage.setItem('nemo_detective_data', dataString);
            console.log('–î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ localStorage');
        }
    } catch (e) {
        console.error('–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö:', e);
    }
}
    
    setupBackButton() {
        // –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥" —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ Telegram WebApp –¥–æ—Å—Ç—É–ø–µ–Ω
        if (this.tg && this.tg.BackButton) {
            try {
                this.tg.BackButton.show();
                this.tg.BackButton.onClick(() => {
                    console.log('–ù–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ –ù–∞–∑–∞–¥');
                    if (window.appState.currentView !== 'menu' && typeof Menu !== 'undefined') {
                        Menu.show();
                    }
                });
                console.log('–ö–Ω–æ–ø–∫–∞ –ù–∞–∑–∞–¥ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞');
            } catch (error) {
                console.warn('–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –∫–Ω–æ–ø–∫—É –ù–∞–∑–∞–¥:', error);
            }
        }
    }
    
    showError(message) {
        const container = document.getElementById('app-container');
        if (container) {
            container.innerHTML = `
                <div class="loading">
                    <h2>üïµÔ∏è –í–µ—á–Ω—ã–π –î–µ—Ç–µ–∫—Ç–∏–≤</h2>
                    <p>${message}</p>
                    <button onclick="location.reload()">üîÑ –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å</button>
                </div>
            `;
        }
    }
}

// –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –∫–æ–≥–¥–∞ –≤—Å–µ –∑–∞–≥—Ä—É–∂–µ–Ω–æ
document.addEventListener('DOMContentLoaded', function() {
    console.log('=== –ó–ê–ì–†–£–ó–ö–ê DOM ===');
    console.log('–ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ:', {
        Menu: typeof Menu,
        EpisodeView: typeof EpisodeView,
        Rating: typeof Rating,
        Episodes: typeof window.episodes
    });
    
    // –ñ–¥—ë–º –Ω–µ–º–Ω–æ–≥–æ —á—Ç–æ–±—ã –≤—Å–µ —Å–∫—Ä–∏–ø—Ç—ã —É—Å–ø–µ–ª–∏ –∑–∞–≥—Ä—É–∑–∏—Ç—å—Å—è
    setTimeout(() => {
        console.log('=== –ü–†–û–í–ï–†–ö–ê –ü–û–°–õ–ï –ó–ê–ì–†–£–ó–ö–ò ===');
        console.log('–ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –ø–æ—Å–ª–µ –∑–∞–¥–µ—Ä–∂–∫–∏:', {
            Menu: typeof Menu,
            EpisodeView: typeof EpisodeView,
            Rating: typeof Rating,
            Episodes: Object.keys(window.episodes || {})
        });
        
        if (typeof Menu !== 'undefined' && typeof EpisodeView !== 'undefined') {
            console.log('‚úÖ –í—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –∑–∞–≥—Ä—É–∂–µ–Ω—ã, –∑–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ');
            new NemoDetectiveApp();
        } else {
            console.error('‚ùå –ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –Ω–µ –∑–∞–≥—Ä—É–∑–∏–ª–∏—Å—å');
            document.getElementById('app-container').innerHTML = `
                <div class="loading">
                    <h2>üïµÔ∏è –í–µ—á–Ω—ã–π –î–µ—Ç–µ–∫—Ç–∏–≤</h2>
                    <p>–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏. –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ.</p>
                    <p>Menu: ${typeof Menu}</p>
                    <p>EpisodeView: ${typeof EpisodeView}</p>
                    <button onclick="location.reload()">üîÑ –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å</button>
                </div>
            `;
        }
    }, 100); // –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Å–∫—Ä–∏–ø—Ç–æ–≤
});
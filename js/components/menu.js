// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
class Menu {
    static show() {
        console.log('üéÆ Menu.show() –≤—ã–∑–≤–∞–Ω');
        
        const userData = window.appState?.userData || { 
            score: 0, 
            currentEpisode: 1,
            completedEpisodes: []
        };
        const container = document.getElementById('app-container');
        
        if (!container) {
            console.error('‚ùå ERROR: app-container –Ω–µ –Ω–∞–π–¥–µ–Ω');
            return;
        }
        
        // –û–ø—Ä–µ–¥–µ–ª—è–µ–º, –Ω–æ–≤–∏—á–æ–∫ –∏–ª–∏ –Ω–µ—Ç
        const isNewUser = userData.currentEpisode === 1 && 
                         userData.score === 0 && 
                         (!userData.completedEpisodes || userData.completedEpisodes.length === 0);
        
        container.innerHTML = `
            <div class="main-menu">
                <!-- –î–µ–∫–æ—Ä–∞—Ç–∏–≤–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã -->
                <div class="decoration top-left"></div>
                <div class="decoration bottom-right"></div>

                <!-- –í–µ—Ä—Ö–Ω–∏–π –∑–∞–≥–æ–ª–æ–≤–æ–∫ -->
                <div class="main-title">
                    <h1>–í–ï–ß–ù–´–ô –î–ï–¢–ï–ö–¢–ò–í</h1>
                    <div class="subtitle">–†–ê–°–°–õ–ï–î–û–í–ê–ù–ò–ï</div>
                </div>

                <!-- –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ -->
                <div class="menu-buttons-container">
                    ${isNewUser ? `
                    <button class="menu-btn start-btn" onclick="Menu.startChapter(1)">
                        –ù–ê–ß–ê–¢–¨ –î–ï–õ–û
                    </button>
                    ` : `
                    <button class="menu-btn start-btn" onclick="Menu.continueGame()">
                        –ü–†–û–î–û–õ–ñ–ò–¢–¨ –î–ï–õ–û
                    </button>
                    `}
                    
                    <button class="menu-btn" onclick="Menu.showArchive()">
                        –ê–†–•–ò–í –î–ï–õ
                    </button>
                    
                    <button class="menu-btn" onclick="Menu.showRating()">
                        –†–ï–ô–¢–ò–ù–ì –î–ï–¢–ï–ö–¢–ò–í–û–í
                    </button>
                </div>

                <!-- –ù–∏–∂–Ω—è—è –Ω–∞–¥–ø–∏—Å—å –∏ —Å—á–µ—Ç -->
                <div class="bottom-section">
                    <div class="quote">
                        –ö–∞–∂–¥—ã–π –æ—Ç–≤–µ—Ç - –∫–ª—é—á –∫ –≤–µ—á–Ω–æ–π –∑–∞–≥–∞–¥–∫–µ
                    </div>
                    <div class="score-display">
                        <strong>–ù–∞–∫–æ–ø–ª–µ–Ω–æ —É–ª–∏–∫:</strong> ${userData.score}
                    </div>
                </div>
            </div>
        `;
        
        // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        if (window.appState) {
            window.appState.currentView = 'menu';
            window.appState.currentEpisodeId = null;
        }
        
        console.log('‚úÖ –ú–µ–Ω—é –ø–æ–∫–∞–∑–∞–Ω–æ —É—Å–ø–µ—à–Ω–æ. –ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:', isNewUser);
    }
    
    static startChapter(chapterNumber) {
        console.log('üé¨ –ó–∞–ø—É—Å–∫ –≥–ª–∞–≤—ã:', chapterNumber);
        
        if (typeof EpisodeView === 'undefined') {
            console.error('‚ùå ERROR: EpisodeView –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω');
            this.showComponentError('EpisodeView');
            return;
        }
        
        EpisodeView.show(`${chapterNumber}_1`);
    }
    
    static continueGame() {
        console.log('‚ñ∂Ô∏è –ü—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ –∏–≥—Ä—ã');
        
        if (typeof EpisodeView === 'undefined') {
            console.error('‚ùå ERROR: EpisodeView –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω');
            this.showComponentError('EpisodeView');
            return;
        }
        
        const currentEpisode = window.appState?.userData?.currentEpisode || 1;
        const currentChapter = 1;
        console.log('üîç –ü–µ—Ä–µ—Ö–æ–¥ –∫ —ç–ø–∏–∑–æ–¥—É:', `${currentChapter}_${currentEpisode}`);
        EpisodeView.show(`${currentChapter}_${currentEpisode}`);
    }
    
    static showArchive() {
        console.log('üìÅ –ü–æ–∫–∞–∑ –∞—Ä—Ö–∏–≤–∞ –¥–µ–ª');
        
        const container = document.getElementById('app-container');
        const userData = window.appState?.userData || { 
            completedEpisodes: [],
            currentEpisode: 1
        };
        
        if (!container) return;
        
        // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å –ø–æ –≥–ª–∞–≤–∞–º
        const completedCount = userData.completedEpisodes.length;
        const totalEpisodes = Object.keys(window.episodes || {}).length;
        const progress = totalEpisodes > 0 ? Math.round((completedCount / totalEpisodes) * 100) : 0;
        
        container.innerHTML = `
            <div class="main-menu">
                <div class="decoration top-left"></div>
                <div class="decoration bottom-right"></div>
                
                <div class="main-title">
                    <h1>–ê–†–•–ò–í –î–ï–õ</h1>
                    <div class="subtitle">–ü–†–û–ì–†–ï–°–°</div>
                </div>
                
                <div style="z-index: 2; text-align: center; margin: 40px 0; max-width: 320px;">
                    <div style="margin: 20px 0; font-size: 1.2rem; color: #ffd700;">
                        –û–±—â–∏–π –ø—Ä–æ–≥—Ä–µ—Å—Å: ${progress}%
                    </div>
                    <div style="margin: 15px 0; font-size: 1.1rem;">
                        –ì–ª–∞–≤–∞ 1: "–ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –≤—Å—Ç—Ä–µ—á–∞"
                    </div>
                    <div style="margin: 10px 0; font-size: 1rem; color: #b8a050;">
                        ${this.getEpisodeProgress(1, userData)}
                    </div>
                    <div style="margin: 25px 0; padding: 15px; background: rgba(255,215,0,0.1); border-radius: 10px;">
                        <div style="font-size: 1rem; margin-bottom: 10px;">–ó–∞–≤–µ—Ä—à–µ–Ω–æ —ç–ø–∏–∑–æ–¥–æ–≤: ${completedCount}/${totalEpisodes}</div>
                        <div style="font-size: 1rem;">–¢–µ–∫—É—â–∏–π —Å—á—ë—Ç: ${userData.score} –±–∞–ª–ª–æ–≤</div>
                    </div>
                </div>
                
                <button class="menu-btn" onclick="Menu.show()" style="max-width: 200px;">
                    –ù–ê–ó–ê–î –í –ú–ï–ù–Æ
                </button>
            </div>
        `;
        
        if (window.appState) {
            window.appState.currentView = 'archive';
        }
    }
    
    static getEpisodeProgress(chapter, userData) {
        const episodes = Object.keys(window.episodes || {})
            .filter(id => id.startsWith(chapter + '_'))
            .sort();
        
        let progress = '';
        episodes.forEach(episodeId => {
            const episode = window.episodes[episodeId];
            const isCompleted = userData.completedEpisodes.includes(episodeId);
            progress += `–≠–ø–∏–∑–æ–¥ ${episode.id}: ${episode.title} ${isCompleted ? '‚úÖ' : '‚ùå'}\n`;
        });
        
        return progress;
    }
    
    static showRating() {
        console.log('üìä –ü–æ–∫–∞–∑ —Ä–µ–π—Ç–∏–Ω–≥–∞');
        
        if (typeof Rating === 'undefined') {
            console.error('‚ùå ERROR: Rating –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω');
            this.showFallbackRating();
            return;
        }
        
        Rating.show();
    }
    
    static showComponentError(componentName) {
        if (window.Telegram?.WebApp) {
            window.Telegram.WebApp.showAlert(`–û—à–∏–±–∫–∞: ${componentName} –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω. –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ.`);
        } else {
            alert(`–û—à–∏–±–∫–∞: ${componentName} –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω. –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ.`);
        }
        
        // –ü—Ä–æ–±—É–µ–º –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é
        setTimeout(() => {
            if (typeof Menu !== 'undefined') {
                Menu.show();
            }
        }, 1000);
    }
    
    static showFallbackRating() {
        const container = document.getElementById('app-container');
        const userData = window.appState?.userData || { score: 0 };
        
        if (!container) return;
        
        container.innerHTML = `
            <div class="main-menu">
                <div class="decoration top-left"></div>
                <div class="decoration bottom-right"></div>
                
                <div class="main-title">
                    <h1>–†–ï–ô–¢–ò–ù–ì –î–ï–¢–ï–ö–¢–ò–í–û–í</h1>
                    <div class="subtitle">–¢–û–ü –ò–ì–†–û–ö–û–í</div>
                </div>
                
                <div class="rating-list" style="z-index: 2; text-align: center; margin: 40px 0;">
                    <div style="margin: 15px 0; font-size: 1.2rem;">1. –®–µ—Ä–ª–æ–∫ –•–æ–ª–º—Å - 150 –±–∞–ª–ª–æ–≤</div>
                    <div style="margin: 15px 0; font-size: 1.2rem;">2. –≠—Ä–∫—é–ª—å –ü—É–∞—Ä–æ - 130 –±–∞–ª–ª–æ–≤</div>
                    <div style="margin: 15px 0; font-size: 1.2rem; color: #ffd700; font-weight: bold;">
                        3. –í—ã - ${userData.score} –±–∞–ª–ª–æ–≤
                    </div>
                </div>
                
                <button class="menu-btn" onclick="Menu.show()" style="max-width: 200px;">
                    –ù–ê–ó–ê–î –í –ú–ï–ù–Æ
                </button>
            </div>
        `;
        
        if (window.appState) {
            window.appState.currentView = 'rating';
        }
    }
}

// –ì–ª–æ–±–∞–ª—å–Ω–∞—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —Å –∑–∞—â–∏—Ç–æ–π
if (typeof window !== 'undefined') {
    window.Menu = Menu;
    console.log('‚úÖ Menu –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –≥–ª–æ–±–∞–ª—å–Ω–æ');
}
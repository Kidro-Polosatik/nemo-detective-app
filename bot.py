import logging
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup, WebAppInfo
from telegram.ext import Application, CommandHandler, CallbackQueryHandler, ContextTypes

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏
BOT_TOKEN = "8356397867:AAGd9nita05gpGDkZWXVwJ81MoMeZbw9ynY"

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)


# --- –ï–î–ò–ù–°–¢–í–ï–ù–ù–ê–Ø –ö–û–ú–ê–ù–î–ê /start ---
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—É—é –∫–Ω–æ–ø–∫—É –¥–ª—è –∑–∞–ø—É—Å–∫–∞ Mini App"""
    user = update.effective_user

    # URL —Ç–≤–æ–µ–≥–æ –±—É–¥—É—â–µ–≥–æ Mini App (–ø–æ–∫–∞ –∑–∞–≥–ª—É—à–∫–∞)
    web_app_url = "https://kidro-polosatik.github.io/nemo-detective-app/"  # –ó–ê–ú–ï–ù–ò–®–¨ –ü–û–¢–û–ú

    # –ï–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω–∞—è –∫–Ω–æ–ø–∫–∞ - –∑–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    keyboard = [
        [InlineKeyboardButton("üéÆ –ó–ê–ü–£–°–¢–ò–¢–¨ –î–ï–¢–ï–ö–¢–ò–í", web_app=WebAppInfo(url=web_app_url))]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)

    # –ú–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
    welcome_text = (
        f"üïµÔ∏è –ü—Ä–∏–≤–µ—Ç, {user.first_name}!\n\n"
        "–ì–æ—Ç–æ–≤ —Ä–∞—Å–∫—Ä—ã—Ç—å —Ç–∞–π–Ω—ã –≤–º–µ—Å—Ç–µ —Å *–ù–µ–∂–∏–≤—ã–º –î–µ—Ç–µ–∫—Ç–∏–≤–æ–º*?\n\n"
        "–ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —Ä–∞—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ üëá"
    )

    await update.message.reply_text(
        welcome_text,
        reply_markup=reply_markup,
        parse_mode='Markdown'
    )


# --- –ó–ê–ü–£–°–ö –ë–û–¢–ê ---
def main() -> None:
    application = Application.builder().token(BOT_TOKEN).build()

    # –¢–û–õ–¨–ö–û –û–î–ò–ù –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ - –∫–æ–º–∞–Ω–¥–∞ /start
    application.add_handler(CommandHandler("start", start))

    application.run_polling()
    print("üïµÔ∏è –ë–æ—Ç-–ª–∞—É–Ω—á–µ—Ä '–ù–µ–∂–∏–≤–æ–π –î–µ—Ç–µ–∫—Ç–∏–≤' –∑–∞–ø—É—â–µ–Ω!")


if __name__ == '__main__':
    main()